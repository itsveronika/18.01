# -*- coding: utf-8 -*-
"""Untitled3.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1kn_MWyUQnjWT3AFIMKdeurqwAgP5NEpq
"""

import pandas as pd 
import numpy as np

ptd1 = pd.read_csv('/content/part_01.csv') 
ptd1.head()

ptd2 = pd.read_csv('/content/part_02.csv')
ptd2.head()

ptd3 = pd.read_csv('/content/part_03.csv')
ptd3.head()

ptd4 = pd.read_csv('/content/part_04.csv')
ptd4.head()

ptd5 = pd.read_csv('/content/part_05.csv')
ptd5.head()

ptd6 = pd.read_csv('/content/part_06.csv')
ptd6.head()

ptd7 = pd.read_csv('/content/part_07.csv')
ptd7.head()

ptd8 = pd.read_csv('/content/part_08.csv')
ptd8.head()

ptd9 = pd.read_csv('/content/part_09.csv')
ptd9.head()

ptd10 = pd.read_csv('/content/part_10.csv')
ptd10.head()

ptd11 = pd.read_csv('/content/part_11.csv')
ptd11.head()

ptd12 = pd.read_csv('/content/part_12.csv')
ptd12.head()

df = pd.concat([ptd1, ptd2, ptd3, ptd4, ptd5, ptd6, ptd7, ptd8, ptd9, ptd10, ptd11, ptd12], ignore_index=True)
print(df)

df1 = df.sort_values("ID") 
df1

df1.drop_duplicates(keep= False )

df1.info(verbose=True)

df1.APP_CAR = df1.APP_CAR.str.lower()
df1.APP_COMP_TYPE = df1.APP_COMP_TYPE.str.lower()
df1.APP_DRIVING_LICENSE = df1.APP_DRIVING_LICENSE.str.lower()
df1.APP_EDUCATION = df1.APP_EDUCATION.str.lower()
df1.APP_EMP_TYPE = df1.APP_EMP_TYPE.str.lower()
df1.APP_KIND_OF_PROP_HABITATION = df1.APP_KIND_OF_PROP_HABITATION.str.lower()
df1.APP_MARITAL_STATUS = df1.APP_MARITAL_STATUS.str.lower()
df1.APP_POSITION_TYPE = df1.APP_POSITION_TYPE.str.lower()
df1.APP_TRAVEL_PASS = df1.APP_TRAVEL_PASS.str.lower()
df1.CLNT_JOB_POSITION = df1.CLNT_JOB_POSITION.str.lower()
df1.CLNT_JOB_POSITION_TYPE = df1.CLNT_JOB_POSITION_TYPE.str.lower()
df1.CLNT_TRUST_RELATION = df1.CLNT_TRUST_RELATION.str.lower()
df1.PACK = df1.PACK.str.lower()

list(df1.PACK.unique())

list(df1.CLNT_TRUST_RELATION.unique())

list(df1.APP_CAR.unique())

list(df1.APP_COMP_TYPE.unique())

list(df1.APP_DRIVING_LICENSE.unique())

list(df1.APP_EDUCATION.unique())

list(df1.APP_EMP_TYPE.unique())

list(df1.APP_KIND_OF_PROP_HABITATION.unique())

list(df1.APP_MARITAL_STATUS.unique())

list(df1.APP_POSITION_TYPE.unique())

list(df1.APP_TRAVEL_PASS.unique())

list(df1.CLNT_JOB_POSITION.unique())

list(df1.CLNT_JOB_POSITION_TYPE.unique())

df1.CLNT_TRUST_RELATION.replace('mother','мать',inplace=True) 
df1.CLNT_TRUST_RELATION.replace('brother','брат',inplace=True) 
df1.CLNT_TRUST_RELATION.replace('friend','друг',inplace=True)
df1.CLNT_TRUST_RELATION.replace('sister','сестра',inplace=True) 
df1.CLNT_TRUST_RELATION.replace('other','другие',inplace=True) 
df1.CLNT_TRUST_RELATION.replace('relative','родственник',inplace=True)
df1.CLNT_TRUST_RELATION.replace('daughter','дочь',inplace=True)
df1.CLNT_TRUST_RELATION.replace('son','сын',inplace=True)
df1.CLNT_TRUST_RELATION.replace('father','отец',inplace=True)

list(df1.CLNT_TRUST_RELATION.unique())

list(df1.CLNT_TRUST_RELATION.unique())

df1.replace(r'^\s+$', np.nan, regex=True)



